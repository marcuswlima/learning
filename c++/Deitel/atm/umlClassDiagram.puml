@startuml
skinparam classAttributeIconSize 0


class Deposit{
    -accountNumber:Integer
    -amount:Double
}

class Withdrawal{
    -accountNumber:Integer
    -amount:Double

}



class Account{
    - accountNumber:Integer
    - pin:Integer
    - avaliableBalance:Double
    - totalBalance:Double
    <<constructor>> +Account(saldoInicial:Integer)
    + getBalance():Integer

}

class BankDatabase{
    + authenticateUser( userAccountNumber:Integer, userPIN:Integer):Boolean
    + getAvailableBalance(userAccountNumber:Integer):Double
    + getTotalBalance(userAccountNumber:Integer):Double
    + credit(userAccountNumber:Integer,amount:Double)
    + debit(userAccountNumber:Integer,amount:Double)
}


package hardware <<node>> {

    class ATM {
        -userAuthenticated:Boolean = false
    }

    class Keypad{

    }

    class Screen {
    }

    class DepositSlot{

    }

    class CashDispenser{
        count : Integer = 500
    }


}

class BalanceInquiry{
    - accountNumber : Integer

}



ATM "1" *-- "1" DepositSlot
ATM "1" *-- "1" Keypad
ATM "1" *-- "1" CashDispenser
ATM "1" *-- "1" Screen
ATM "1" -- "1" BankDatabase : Autentica o usuÃ¡rio contra >

BankDatabase "1" *-- "0..*" Account : Contem > 

Withdrawal "0..1"-- "1"  ATM : Executa <
Withdrawal "0..1" -- BankDatabase: Acessa/Modifica o saldo de uma conta >
Withdrawal "0..1" -- "1" Screen
Withdrawal "0..1" -- "1" CashDispenser
Withdrawal "0..1" -- "1" Keypad

Deposit "0..1"-- "1"  ATM : Executa <
Deposit "0..1" -- BankDatabase: Acessa/Modifica o saldo de uma conta >
Deposit "0..1" -- "1" Screen
Deposit "0..1" -- "1" CashDispenser
Deposit "0..1" -- "1" Keypad



@enduml