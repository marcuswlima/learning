@startuml
class Triade{
    Triade(Tecla);
    void setT1(Tecla);
    Tecla getT1();
    void setT3(Tecla);
    Tecla getT3();
    void setT5(Tecla);
    Tecla getT5();
    void GerarTriade(Tecla, string);
    void ImprimirEmTela();
    string GerarDescricao();
    Tecla t1;
    Tecla t3;
    Tecla t5;
}


class Tecla {
    Tecla(); // constructor
    Tecla(int, int, int ); // constructor
    void setTecla( int, int, int ); 
    void setOitava(int);
    void setNota(int);
    void setAcidente(int);
    int getOitava();
    int getNota();
    int getAcidente();
    string GerarDescricao();
    void ImprimirEmTela();
    void Aleatorio();
    Tecla qualRelativa(int);
    int oitava;     // 0--8     / oitavas de um pianao
    int nota;       // 1--7     / do,re,mi,fa,sol,la,si,
    int acidente;   // [-1,0,1] / bemol, sem acidente, sustenido
}

class Intervalo {
    Intervalo();
    Intervalo(Tecla);
    Intervalo(int, int, int);
    void setT1(Tecla);
    Tecla getT1();
    void setT2(Tecla);
    Tecla getT2();
    void setQuantidadeNotas(int);
    int getQuantidadeNotas();
    void setQualidade(char);
    string getQualidade();
    void EncontrarQualificacao(Tecla);      // em função da segunda nota
    void EncontrarSegundaNota(int, string);   // em funçaõ da qualificação
    string GerarDescricao();
    void Imprimir();                        // se existir as duas notas;
    Tecla t1;
    Tecla t2;
    int quantidadeNotas; //[2-7]
    int quantidadeSemitons; //[2-7]
    string qualidade; //["3xd","2xd","d","m","M","J","A","2xA","3xA"];
}

Tecla "3" *-- Triade: Contém
Tecla "2" *-- Intervalo: Contém

@enduml
